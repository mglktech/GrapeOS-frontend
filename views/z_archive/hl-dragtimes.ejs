<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>GrapeOS</title>
    <link rel="stylesheet" href="/assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Fira+Code:400,500,700">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto+Mono:300,500,700">
    <link rel="stylesheet" href="/assets/font-awesome/css/font-awesome.css">
    <link rel="stylesheet" href="/assets/css/bootstrap.css">
    <link rel="stylesheet" href="/assets/css/styles.css">
    <style>
        ::-webkit-scrollbar {
            top: 35px;
            width: 1rem;
            background-color: #212529;
        }

        :-webkit-scrollbar-track {
            background-color: #212529;
        }

        ::-webkit-scrollbar-thumb {
            border-radius: 10px;
            background-color: rgba(38, 21, 67, 1);
        }

        ::-webkit-scrollbar-corner {
            background: transparent;
        }
    </style>
</head>



<body style="background: #000000;">
    <div class="container text-light bg-black">
        <div class="row">
            <div class="col p-0"><img class="img-fluid p-0" id="img-splash-banner"
                    src="https://cdn.discordapp.com/splashes/366897352012988418/33445aa0df9cc955cda19c3285a5a38a.png?size=512"
                    width="100%">
                <div class="row translate-middle-y mx-2">
                    <div class="col p-0 col-3"><img
                            class="img-fluid border rounded-circle border-secondary p-0 rounded-circle"
                            src="https://cdn.discordapp.com/icons/366897352012988418/0531ef8ba42794ef20c1cc83e446b37d.png?size=512">
                    </div>
                    <div class="col d-flex flex-column justify-content-center">
                        <h1 class="text-light m-0">Highlife</h1><span class="text-light">discord.gg/highlife</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row translate-middle-y mt-4">
            <div class="col col-12">
                <h1># live-dragtimes</h1>
                <p>Using /60timer in-game you can view submitted results here<br></p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="p-2">
                    <div class="input-group">
                        <div class="dropup"><button class="btn btn-dark dropdown-toggle rounded-0 rounded-start"
                                aria-expanded="false" data-bs-toggle="dropdown" type="button"><i
                                    class="fa fa-sort-amount-desc p-1"></i>Sort</button>
                            <div class="dropdown-menu dropdown-menu-dark bg-dark">
                                <span class="dropdown-item-text fw-bold">Sort By:</span>
                                <div class="dropdown-divider"></div>
                                <button id= "mostRecent" class="dropdown-item">Most Recent</button>
                                <button id="zeroSixty" class="dropdown-item">0-60</button>
                                <button id="zerohundred"  class="dropdown-item" >0-100</button>
                                <button id="qmile" class="dropdown-item">Quarter Mile</button>
                                <button id="hmile" class="dropdown-item">Half Mile</button>
                            </div>
                        </div><input id="searchInput" class="form-control" type="text">
                        <button id="searchButton"class="btn btn-primary" type="button"><i class="fa fa-search"></i></button>
                    </div><span class="text-muted" >Sorted By: </span><span id="spanSortBy" >Most Recent</span>
                </div>
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-dark table-sm table-bordered text-nowrap">
                        <caption>All times are represented in Seconds</caption>
                        <caption>Data is collected dynamically from Discord and stored using MongoDB</caption>
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Submitted</th>
                                <th>Name</th>
                                <th>Vehicle</th>
                                <th>0-60</th>
                                <th>0-100</th>
                                <th>Quarter Mile</th>
                                <th>Half Mile</th>
                            </tr>
                        </thead>
                        <tbody id="tBody">
                            <tr>
                                <td>Cell 1</td>
                                <td>Cell 2</td>
                                <td>Cell 3</td>
                                <td>Cell 4</td>
                                <td>Cell 5</td>
                                <td>Cell 6</td>
                                <td>Cell 7</td>
                                <td>Cell 8</td>
                            </tr>
                            <tr>
                                <td>Cell 3</td>
                                <td>Cell 4</td>
                                <td>Cell 3</td>
                                <td>Cell 4</td>
                                <td>Cell 5</td>
                                <td>Cell 6</td>
                                <td>Cell 7</td>
                                <td>Cell 8</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <script src="/assets/bootstrap/js/bootstrap.min.js"></script>
    <script>
        /*
         * Javascript Humane Dates
         * Copyright (c) 2008 Dean Landolt (deanlandolt.com)
         * Re-write by Zach Leatherman (zachleat.com)
         * 
         * Adopted from the John Resig's pretty.js
         * at http://ejohn.org/blog/javascript-pretty-date
         * and henrah's proposed modification 
         * at http://ejohn.org/blog/javascript-pretty-date/#comment-297458
         * 
         * Licensed under the MIT license.
         */

        function humane_date(date_str) {
            var time_formats = [
                [60, 'just now'],
                [90, '1 minute'], // 60*1.5
                [3600, 'minutes', 60], // 60*60, 60
                [5400, '1 hour'], // 60*60*1.5
                [86400, 'hours', 3600], // 60*60*24, 60*60
                [129600, '1 day'], // 60*60*24*1.5
                [604800, 'days', 86400], // 60*60*24*7, 60*60*24
                [907200, '1 week'], // 60*60*24*7*1.5
                [2628000, 'weeks', 604800], // 60*60*24*(365/12), 60*60*24*7
                [3942000, '1 month'], // 60*60*24*(365/12)*1.5
                [31536000, 'months', 2628000], // 60*60*24*365, 60*60*24*(365/12)
                [47304000, '1 year'], // 60*60*24*365*1.5
                [3153600000, 'years', 31536000], // 60*60*24*365*100, 60*60*24*365
                [4730400000, '1 century'] // 60*60*24*365*100*1.5
            ];

            var time = ('' + date_str).replace(/-/g, "/").replace(/[TZ]/g, " "),
                dt = new Date,
                seconds = ((dt - new Date(time) + (dt.getTimezoneOffset() * 60000)) / 1000),
                token = ' ago',
                i = 0,
                format;

            if (seconds < 0) {
                seconds = Math.abs(seconds);
                token = '';
            }

            while (format = time_formats[i++]) {
                if (seconds < format[0]) {
                    if (format.length == 2) {
                        return format[1] + (i > 1 ? token : ''); // Conditional so we don't return Just Now Ago
                    } else {
                        return Math.round(seconds / format[2]) + ' ' + format[1] + (i > 1 ? token : '');
                    }
                }
            }

            // overflow for centuries
            if (seconds > 4730400000)
                return Math.round(seconds / 4730400000) + ' centuries' + token;

            return date_str;
        };

        if (typeof jQuery != 'undefined') {
            jQuery.fn.humane_dates = function () {
                return this.each(function () {
                    var date = humane_date(this.title);
                    if (date && jQuery(this).text() != date) // don't modify the dom if we don't have to
                        jQuery(this).text(date);
                });
            };
        }
    </script>
    <script>
        let sort = null;
        let sb = document.querySelector("#spanSortBy");

        document.querySelector("#mostRecent").addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            sort=null;
            sb.innerHTML = "Most Recent";
            getData(sort,searchText);
        });
        document.querySelector("#zeroSixty").addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            sort="zero60";
            sb.innerHTML = "0-60";
            getData(sort,searchText);
        });
        document.querySelector("#zerohundred").addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            sort="zero100";
            sb.innerHTML = "0-100";
            getData(sort,searchText);
        });
        document.querySelector("#qmile").addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            sort="qMile"
            sb.innerHTML = "Quarter Mile";
            getData(sort,searchText);
        });
        document.querySelector("#hmile").addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            sb.innerHTML = "Half Mile";
            sort="hMile";
            getData(sort,searchText);
        });
        const btnSearch = document.querySelector("#searchButton");
        btnSearch.addEventListener("click", (e) => {
            let searchText = document.querySelector("#searchInput").value;
            getData(sort,searchText);
        });
        

        function dt(ts) {
            return  humane_date(new Date(ts).toISOString());
        }
        function chk(num) {
            if(num == -1) {
                return "-";
            }
            return num;
        }
        let row = (index, date, name, vehicle, zerosixty, zerohundred, qMile, hMile) => {
            
            return `<tr>
                                <td>${chk(index)}</td>
                                <td>${chk(date)}</td>
                                <td>${chk(name)}</td>
                                <td>${chk(vehicle)}</td>
                                <td>${chk(zerosixty)}</td>
                                <td>${chk(zerohundred)}</td>
                                <td>${chk(qMile)}</td>
                                <td>${chk(hMile)}</td>
                            </tr>`
        }
        const tBody = document.querySelector("#tBody");
        
        async function getData(sort = null, search = null) {
            
            let data = await fetch(`/api/bespoke/highlife/dragtimes/sortsearch/${sort || "---"}/${search || "---"}`).then(resp => resp.json());
            let htmlData = "";
            for (d of data) {
                let index = data.indexOf(d) + 1;
                htmlData += row(index,dt(d.timestamp), d.rp_name, d
                    .vehicle, d.zero_sixty, d.zero_hundred, d.q_mile, d.h_mile);
            }
            tBody.innerHTML = htmlData;
        }
        getData();
        window.setInterval(getData(sort,searchText),10000);
    </script>

</body>


</html>